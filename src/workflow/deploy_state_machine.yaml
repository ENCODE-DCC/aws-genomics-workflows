AWSTemplateFormatVersion: 2010-09-09

Description: Deploys a State Machine that runs a Genomics Workflow on AWS

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Lambda Functions
      Parameters:
      - IsaacLambdaArn
      - StrelkaLambdaArn
      - SamtoolsStatsLambdaArn
      - SnpeffLambdaArn
      - BatchGetJobStatusLambdaArn

Parameters:
  IsaacLambdaArn:
    Type: String
    Description: Arn of Lambda Function to Submit Isaac
  StrelkaLambdaArn:
    Type: String
    Description: Arn of Lambda Function to Submit Strelka
  SamtoolsStatsLambdaArn:
    Type: String
    Description: Arn of Lambda Function to Submit Smatools Stats
  SnpeffLambdaArn:
    Type: String
    Description: Arn of Lambda Function to Submit SnpEff
  BatchGetJobStatusLambdaArn:
    Type: String
    Description: Arn of Lambda Function to Query Job Status for Batch

Resources:
  StatesExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - !Join [".", [ "states", !Ref "AWS::Region", "amazonaws.com"] ]
            Action:
              - "sts:AssumeRole"

  StatesExecutionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: StatesExecutionPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: "lambda:InvokeFunction"
            Resource: "*"
      Roles:
        - !Ref StatesExecutionRole

  GenomicWorkflow:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !GetAtt StatesExecutionRole.Arn
      DefinitionString: !Sub |-
        {
          "Comment": "A simple example that submits a Job to AWS Batch",
          "StartAt": "SubmitIsaacJob",
          "States": {
            "SubmitIsaacJob": {
              "Type": "Task",
              "Resource": "${IsaacLambdaArn}",
              "Next": "GetIsaacJobStatus"
            },
            "GetIsaacJobStatus": {
              "Type": "Task",
              "Resource": "${BatchGetJobStatusLambdaArn}",
              "Next": "CheckIsaacJobStatus",
              "InputPath": "$",
              "ResultPath": "$.status"
            },
            "CheckIsaacJobStatus": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.status",
                  "StringEquals": "FAILED",
                  "Next": "GetFinalIsaacJobStatus"
                },
                {
                  "Variable": "$.status",
                  "StringEquals": "SUCCEEDED",
                  "Next": "GetFinalIsaacJobStatus"
                }
              ],
              "Default": "IsaacWait30Seconds"
            },
            "IsaacWait30Seconds": {
              "Type": "Wait",
              "Seconds": 30,
              "Next": "GetIsaacJobStatus"
            },
            "GetFinalIsaacJobStatus": {
              "Type": "Task",
              "Resource": "${BatchGetJobStatusLambdaArn}",
              "Next": "Parallel",
              "InputPath": "$",
              "ResultPath": "$.status"
            },
            "Parallel": {
              "Type": "Parallel",
              "Next": "FinalState",
              "Branches": [
                {
                  "StartAt": "SubmitStrelkaJob",
                  "States": {
                    "SubmitStrelkaJob": {
                      "Type": "Task",
                      "Resource": "${StrelkaLambdaArn}",
                      "Next": "GetStrelkaJobStatus"
                    },
                    "GetStrelkaJobStatus": {
                      "Type": "Task",
                      "Resource": "${BatchGetJobStatusLambdaArn}",
                      "Next": "CheckStrelkaJobStatus",
                      "InputPath": "$",
                      "ResultPath": "$.status"
                    },
                    "CheckStrelkaJobStatus": {
                      "Type": "Choice",
                      "Choices": [
                        {
                          "Variable": "$.status",
                          "StringEquals": "FAILED",
                          "Next": "GetFinalStrelkaJobStatus"
                        },
                        {
                          "Variable": "$.status",
                          "StringEquals": "SUCCEEDED",
                          "Next": "GetFinalStrelkaJobStatus"
                        }
                      ],
                      "Default": "StrelkaWait30Seconds"
                    },
                    "StrelkaWait30Seconds": {
                      "Type": "Wait",
                      "Seconds": 30,
                      "Next": "GetStrelkaJobStatus"
                    },
                    "GetFinalStrelkaJobStatus": {
                      "Type": "Task",
                      "Resource": "${BatchGetJobStatusLambdaArn}",
                      "Next": "SubmitSnpeffJob",
                      "InputPath": "$",
                      "ResultPath": "$.status"
                    },
                    "SubmitSnpeffJob": {
                      "Type": "Task",
                      "Resource": "${SnpeffLambdaArn}",
                      "Next": "GetSnpeffJobStatus"
                    },
                    "GetSnpeffJobStatus": {
                      "Type": "Task",
                      "Resource": "${BatchGetJobStatusLambdaArn}",
                      "Next": "CheckSnpeffJobStatus",
                      "InputPath": "$",
                      "ResultPath": "$.status"
                    },
                    "CheckSnpeffJobStatus": {
                      "Type": "Choice",
                      "Choices": [
                        {
                            "Variable": "$.status",
                            "StringEquals": "FAILED",
                            "Next": "GetFinalSnpeffJobStatus"
                        },
                        {
                            "Variable": "$.status",
                            "StringEquals": "SUCCEEDED",
                            "Next": "GetFinalSnpeffJobStatus"
                        }
                      ],
                      "Default": "SnpeffWait30Seconds"
                    },
                    "SnpeffWait30Seconds": {
                        "Type": "Wait",
                        "Seconds": 30,
                    "Next": "GetSnpeffJobStatus"
                    },
                    "GetFinalSnpeffJobStatus": {
                      "Type": "Task",
                      "Resource": "${BatchGetJobStatusLambdaArn}",
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "SubmitSamtoolsStatsJob",
                  "States": {
                    "SubmitSamtoolsStatsJob": {
                      "Type": "Task",
                      "Resource": "${SamtoolsStatsLambdaArn}",
                      "Next": "GetSamtoolsStatsJobStatus"
                    },
                    "GetSamtoolsStatsJobStatus": {
                      "Type": "Task",
                      "Resource": "${BatchGetJobStatusLambdaArn}",
                      "Next": "CheckSamtoolsStatsJobStatus",
                      "InputPath": "$",
                      "ResultPath": "$.status"
                    },
                    "CheckSamtoolsStatsJobStatus": {
                      "Type": "Choice",
                      "Choices": [
                        {
                            "Variable": "$.status",
                            "StringEquals": "FAILED",
                            "Next": "GetFinalSamtoolsStatsJobStatus"
                        },
                        {
                            "Variable": "$.status",
                            "StringEquals": "SUCCEEDED",
                            "Next": "GetFinalSamtoolsStatsJobStatus"
                        }
                      ],
                      "Default": "Wait30Seconds"
                    },
                    "Wait30Seconds": {
                        "Type": "Wait",
                        "Seconds": 30,
                    "Next": "GetSamtoolsStatsJobStatus"
                    },
                    "GetFinalSamtoolsStatsJobStatus": {
                      "Type": "Task",
                      "Resource": "${BatchGetJobStatusLambdaArn}",
                      "End": true
                    }
                  }
                }
              ]
            },
            "FinalState": {
              "Type": "Pass",
              "End": true
            }
          }
        }
