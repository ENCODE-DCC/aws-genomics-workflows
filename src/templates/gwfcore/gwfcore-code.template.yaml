---
AWSTemplateFormatVersion: 2010-09-09
Description: |
  (WWPS-GLS-WF-CODE) Creates AWS CodeCommit repos and CodeBuild projects for Genomics Workflows Core assets and artifacts

Parameters:
  Namespace:
    Type: String
    Description: Namespace (e.g. project name) to use to label resources
  
  InstallBucketName:
    Type: String
    Description: >-
      Bucket where installed artifacts will be stored
  InstallBucketPrefix:
    Type: String
    Description: >-
      Prefix where installed artifacts will be stored
    Default: _gwfcore/artifacts
    
  ArtifactBucketName:
    Type: String
    Default: aws-genomics-workflows
    Description: >-
      S3 Bucket where distribution artifacts and additions scripts are stored
  ArtifactBucketPrefix:
    Type: String
    Default: artifacts
    Description: >-
      Prefix in ArtifactBucketName where distribution artifacts and additions scripts are stored

Mappings:
  TagMap:
    default:
      architecture: "genomics-workflows"
      solution: "default"
      tags:
        - Key: "architecture"
          Value: "genomics-workflows"
        - Key: "solution"
          Value: "default"

# Conditions:
  
Resources:

  IAMCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub codebuild-service-role-${AWS::StackName}-${AWS::Region}
      Path: /service-role/
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub codebuild-basepolicy-${AWS::StackName}-${AWS::Region}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/*"
                Action:
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:UpdateReport
                  - codebuild:BatchPutTestCases

              - Effect: Allow
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*:*"
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
        
        - PolicyName: s3-write-access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub arn:aws:s3:::${InstallBucketName}
                  - !Sub arn:aws:s3:::${InstallBucketName}/*
                Action:
                  - s3:*
        
        - PolicyName: s3-read-access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucketName}
                  - !Sub arn:aws:s3:::${ArtifactBucketName}/*
                Action:
                  - s3:Get*
                  - s3:List*
  
  IAMLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
      Policies:
        - PolicyName: !Sub codebuild-access-${AWS::Region}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                Resource: "*"

        - PolicyName: !Sub events-access-${AWS::Region}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - events:DeleteRule
                  - events:PutRule
                  - events:PutTargets
                  - events:RemoveTargets
                Resource:
                  - !Sub arn:aws:events:*:${AWS::AccountId}:rule/*
        
        - PolicyName: !Sub lambda-access-${AWS::Region}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - lambda:AddPermission
                  - lambda:RemovePermission
                Resource:
                  - !Sub arn:aws:lambda:*:${AWS::AccountId}:function:*
  
  RepoEcsAdditions:
    Type: "AWS::CodeCommit::Repository"
    Properties:
      RepositoryName: !Sub ecs-additions-${Namespace}
      RepositoryDescription: |
        Provisioning scripts for Batch instances
      
      Code:
        S3:
          Bucket: !Ref ArtifactBucketName
          Key: !Sub ${ArtifactBucketPrefix}/aws-ecs-additions.zip
      Tags:
        - Key: architecture
          Value: !FindInMap ["TagMap", "default", "architecture"]
  
  BuildEbsAutoscale:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Description: |
        Build project for amazon-ebs-autoscale artifact
      Environment: #required
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:1.0
        ComputeType: BUILD_GENERAL1_LARGE
        EnvironmentVariables:
          - Name: SOURCE_ARTIFACT_URL
            Value: !Sub s3://${ArtifactBucketName}/${ArtifactBucketPrefix}
          - Name: ARTIFACT
            Value: amazon-ebs-autoscale.tgz
          - Name: TARGET_ARTIFACT_URL
            Value: !Sub s3://${InstallBucketName}/${InstallBucketPrefix}
      Source: #required
        Type: NO_SOURCE
        BuildSpec: |
          version: 0.2
          phases:
            build:
              commands:
                - aws s3 cp ${SOURCE_ARTIFACT_URL}/${ARTIFACT} ${TARGET_ARTIFACT_URL}/${ARTIFACT}
      Artifacts:
        Type: NO_ARTIFACTS
      ServiceRole: !GetAtt IAMCodeBuildRole.Arn
      Tags:
        - Key: architecture
          Value: !FindInMap ["TagMap", "default", "architecture"]
  
  CodeBuildInvocation:
    Type: Custom::CodeBuildInvocation
    Properties:
      ServiceToken: !GetAtt CodeBuildInvocationFunction.Arn
      BuildProject: !Ref BuildEbsAutoscale
    
  CodeBuildInvocationFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: lambda.handler
      Role: !GetAtt IAMLambdaExecutionRole.Arn
      Runtime: python3.7
      Timeout: 30
      Code:
        S3Bucket: !Ref ArtifactBucketName
        S3Key: !Sub ${ArtifactBucketPrefix}/lambda-codebuild.zip      
  
Outputs:
  EcsAdditionsRepo:
    Value: !Sub https://${AWS::Region}.console.aws.amazon.com/codesuite/codecommit/repositories/${RepoEcsAdditions.Name}/browse?region=${AWS::Region}
  EcsAdditionsRepoName:
    Value: !GetAtt RepoEcsAdditions.Name 
  EcsAdditionsRepoCloneUrlHttp:
    Value: !GetAtt RepoEcsAdditions.CloneUrlHttp
  InstalledArtifactsBucket:
    Value: !Ref InstallBucketName
  InstalledArtifactsPrefix:
    Value: !Ref InstallBucketPrefix
  InstalledArtifactsS3RootUrl:
    Value: !Sub s3://${InstallBucketName}/${InstallBucketPrefix}
...