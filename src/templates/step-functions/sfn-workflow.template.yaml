---
AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  (WWPS-GLS-WF-SFN-WORKFLOW) Creates container images, AWS Batch Job Definitions, 
  and an AWS Step Functions State Machine for a genomics workflow.

Mappings:
  TagMap:
    default:
      architecture: "genomics-workflows"
      solution: "step-functions"
      tags:
        - Key: "architecture"
          Value: "genomics-workflows"
        - Key: "solution"
          Value: "step-functions"

Metadata:
  AWS::Cloudformation::Interface:
    ParameterGroups:
      - Label:
          default: "Required"
        Parameters:
          - S3BucketName
          - BatchJobQueue

Parameters:
  S3BucketName:
    Description: >-
      A S3 bucket name for storing analysis results.
      The bucket name must respect the S3 bucket naming conventions 
      (can contain lowercase letters, numbers, periods and hyphens).
      If left blank a unique bucket name will be generated.
    Type: String
    AllowedPattern: "((?=^.{3,63}$)(?!^(\\d+\\.)+\\d+$)(^(([a-z0-9]|[a-z0-9][a-z0-9\\-]*[a-z0-9])\\.)*([a-z0-9]|[a-z0-9][a-z0-9\\-]*[a-z0-9])$)|(^.{0}$))"
    ConstraintDescription: "Must respect S3 bucket naming conventions"
  
  BatchJobQueue:
    Description: Name or ARN of the AWS Batch Job Queue the workflow will use by default
    Type: String
  
  ArtifactBucketName:
    Type: String
    Default: aws-genomics-workflows
    Description: >-
      S3 Bucket where artifacts and additions scripts are stored
  ArtifactBucketPrefix:
    Type: String
    Default: artifacts
    Description: >-
      Prefix in ArtifactBucketName where artifacts and additions scripts are stored
  
  TemplateRootUrl:
    Type: String
    Description: >-
      Root URL for where nested templates are stored
    Default: https://aws-genomics-workflows.s3.amazonaws.com/templates
    ConstraintDescription: >-
      Must be a valid S3 HTTP URL
    AllowedPattern: "https://[a-z0-9-./]{0,}s3(-[a-z0-9]+)*\\.amazonaws\\.com/[a-z0-9-./]{3,}"

Resources:
  ContainerSource:
    Type: "AWS::CodeCommit::Repository"
    Properties:
      RepositoryName: !Sub containers-${AWS::StackName}
      RepositoryDescription: >-
        Source code for workflow tooling containers
      Code:
        S3:
          Bucket: !Ref ArtifactBucketName
          Key: !Sub ${ArtifactBucketPrefix}/containers.zip
      Tags:
        - Key: architecture
          Value: !FindInMap ["TagMap", "default", "architecture"]
  
  ContainerBuildBwa:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplateRootUrl}/_common/container-build.template.yaml
      Parameters:
        ImageName: bwa
        ImageTag: "0.7.17"
        GitRepoType: CODECOMMIT
        GitCloneUrlHttp: !GetAtt ContainerSource.CloneUrlHttp
        ProjectPath: ./bwa
        ProjectBuildSpecFile: ./buildspec-workflow-tool.yml
        CreateBatchJobDefinition: "Yes"
        BatchJobDefinitionName: !Sub "bwa-${AWS::StackName}"
        ArtifactBucketName: !Ref ArtifactBucketName
        ArtifactBucketPrefix: !Ref ArtifactBucketPrefix
      Tags: !FindInMap ["TagMap", "default", "tags"]
  
  ContainerBuildSamtools:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplateRootUrl}/_common/container-build.template.yaml
      Parameters:
        ImageName: samtools
        ImageTag: "1.9"
        GitRepoType: CODECOMMIT
        GitCloneUrlHttp: !GetAtt ContainerSource.CloneUrlHttp
        ProjectPath: ./samtools
        ProjectBuildSpecFile: ./buildspec-workflow-tool.yml
        CreateBatchJobDefinition: "Yes"
        BatchJobDefinitionName: !Sub "samtools-${AWS::StackName}"
        ArtifactBucketName: !Ref ArtifactBucketName
        ArtifactBucketPrefix: !Ref ArtifactBucketPrefix
      Tags: !FindInMap ["TagMap", "default", "tags"]
  
  ContainerBuildBcftools:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplateRootUrl}/_common/container-build.template.yaml
      Parameters:
        ImageName: bcftools
        ImageTag: "1.9"
        GitRepoType: CODECOMMIT
        GitCloneUrlHttp: !GetAtt ContainerSource.CloneUrlHttp
        ProjectPath: ./bcftools
        ProjectBuildSpecFile: ./buildspec-workflow-tool.yml
        CreateBatchJobDefinition: "Yes"
        BatchJobDefinitionName: !Sub "bcftools-${AWS::StackName}"
        ArtifactBucketName: !Ref ArtifactBucketName
        ArtifactBucketPrefix: !Ref ArtifactBucketPrefix
      Tags: !FindInMap ["TagMap", "default", "tags"]
  
  IAMStepFunctionsExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub stepfunctions-service-role-${AWS::StackName}-${AWS::Region} 
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: !Sub states-access-policy-${AWS::Region}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              # Service integration permissions.  For more details see:
              # https://docs.aws.amazon.com/step-functions/latest/dg/service-integration-iam-templates.html
              
              # enable calling lambda functions
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: "*"  # this can be scope to specific functions if needed

              # enable calling other step functions
              - Effect: Allow
                Action:
                  - states:StartExecution
                Resource: "*"  # this can be scoped to specific state machines if needed
              
              # enable submitting batch jobs (synchronous)
              - Effect: Allow
                Action:
                  - "batch:SubmitJob"
                  - "batch:DescribeJobs"
                  - "batch:TerminateJob"
                Resource: "*"  # this can be scoped to specific job queues if needed
              - Effect: Allow
                Action:
                  - "events:PutTargets"
                  - "events:PutRule"
                  - "events:DescribeRule"
                Resource:
                  - !Sub "arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/StepFunctionsGetEventsForBatchJobsRule"
  
  StateMachine:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplateRootUrl}/step-functions/sfn-workflow-state-machine.template.yaml
      Parameters:
        S3BucketName: !Ref S3BucketName
        IAMStepFunctionsExecutionRole: !GetAtt IAMStepFunctionsExecutionRole.Arn
        BatchJobQueue: !Ref BatchJobQueue
        BatchJobDefinitionBwa: !GetAtt ContainerBuildBwa.Outputs.JobDefinition
        BatchJobDefinitionSamtools: !GetAtt ContainerBuildSamtools.Outputs.JobDefinition
        BatchJobDefinitionBcftools: !GetAtt ContainerBuildBcftools.Outputs.JobDefinition
      Tags: !FindInMap ["TagMap", "default", "tags"]

Outputs:
  StateMachine:
    Value: !GetAtt StateMachine.Outputs.StateMachine
    Description: >
      AWS Step Functions State Machine that demonstrates a simple genomics workflow
    Export:
      Name: !Sub ${AWS::StackName}-StateMachine
  
  StateMachineInput:
    Value: !GetAtt StateMachine.Outputs.StateMachineInput
    Description: >
      Example input for the state machine.  Use this when executing your workflow.
  
  StepFunctionsExecutionRole:
    Value: !GetAtt IAMStepFunctionsExecutionRole.Arn
    Description: IAM role used by AWS Step Functions to execute the state machine
    Export:
      Name: !Sub ${AWS::StackName}-StepFunctionsExecutionRole

...