AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  (WWPS-GLS-WF-LT) Creates an EC2 Launch Template for AWS Batch based
  genomics workflows

Mappings:
  TagMap:
    default:
      architecture: "genomics-workflows"
      solution: "default"
      tags:
        - Key: "architecture"
          Value: "genomics-workflows"
        - Key: "solution"
          Value: "default"

Parameters:
  LaunchTemplateNamePrefix:
    Type: String
    Default: genomics-workflow
    Description: Name of the launch template. This will be made unique using the Stack ID.
  DockerStorageVolumeSize:
    Type: Number
    Default: 100
    Description: The initial size of the volume Docker will use for image and metadata storage (GB)
  EbsAutoscaleVersion:
    Type: String
    Description: >
      The version of Amazon EBS Autoscale to use. Options are "dist-release" - the version distributed with this release
      of the reference implementation, "latest" - the latest available tagged version from GitHub, "develop" - the current
      master source (recommended for development and advanced use only).
    Default: dist_release
    AllowedValues:
      - dist_release
      - latest
      - develop
  EbsAutoscaleFilesystem:
    Type: String
    Description: >
      The filesystem used by Amazon EBS Autoscale.
    Default: btrfs
    AllowedValues:
      - btrfs
      - lvm.ext4
  ArtifactBucketName:
    Type: String
    Default: aws-genomics-workflows
    Description: >-
      S3 Bucket where artifacts and additions scripts are stored
  ArtifactBucketPrefix:
    Type: String
    Default: artifacts
    Description: >-
      Prefix in ArtifactBucketName where artifacts and additions scripts are stored

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Required"
        Parameters:
          - LaunchTemplateNamePrefix
      - Label:
          default: "Optional"
        Parameters:
          - DockerStorageVolumeSize
          - EbsAutoscaleVersion
          - EbsAutoscaleFilesystem

Conditions:
  NoArtifactBucketPrefix: !Equals [ !Ref ArtifactBucketPrefix, "" ]

Resources:
  EC2LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Join ["-", [!Ref LaunchTemplateNamePrefix, !Select [2, !Split ["/", !Ref "AWS::StackId" ]]]]
      LaunchTemplateData:
        TagSpecifications:
          - ResourceType: instance
            Tags:
            - Key: architecture
              Value: !FindInMap ["TagMap", "default", "architecture"]
        BlockDeviceMappings:
          - Ebs:
              DeleteOnTermination: True
              VolumeSize: 50
              VolumeType: gp2
            DeviceName: /dev/xvda
          - Ebs:
              Encrypted: True
              DeleteOnTermination: True
              VolumeSize: 22
              VolumeType: gp2
            DeviceName: /dev/xvdcz
          - Ebs:
              Encrypted: True
              DeleteOnTermination: True
              VolumeSize: !Ref DockerStorageVolumeSize
              VolumeType: gp2
            DeviceName: /dev/xvdba
        UserData:
          Fn::Base64:
            Fn::Sub:
              - |
                MIME-Version: 1.0
                Content-Type: multipart/mixed; boundary="==BOUNDARY=="

                --==BOUNDARY==
                Content-Type: text/cloud-config; charset="us-ascii"

                packages:
                - jq
                - btrfs-progs
                - sed
                - git
                - amazon-ssm-agent
                - unzip

                runcmd:
                # install aws-cli v2 and copy the static binary in an easy to find location for bind-mounts into containers
                - curl -s "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "/tmp/awscliv2.zip"
                - unzip -q /tmp/awscliv2.zip -d /tmp
                - /tmp/aws/install -b /usr/bin
                - mkdir -p /opt/aws-cli/bin
                - cp -av $(dirname $(find /usr/local/aws-cli -name 'aws' -type f))/. /opt/aws-cli/bin/

                # set environment variables for provisioning
                - export EBS_AUTOSCALE_VERSION=${EbsAutoscaleVersion}
                - export EBS_AUTOSCALE_FILESYSTEM="${EbsAutoscaleFilesystem}"
                - export ARTIFACT_S3_ROOT_URL=${ArtifactS3RootUrl}
                
                - aws s3 cp --no-progress $ARTIFACT_S3_ROOT_URL/provision.sh /opt
                - chmod a+x /opt/provision.sh
                - /opt/provision.sh

                --==BOUNDARY==--
              - ArtifactS3RootUrl:
                  Fn::If:
                    - NoArtifactBucketPrefix
                    - !Sub "s3://${ArtifactBucketName}"
                    - !Sub "s3://${ArtifactBucketName}/${ArtifactBucketPrefix}"

Outputs:
  LaunchTemplateId:
    Description: >-
      EC2 Launch Template ID to use when creating AWS Batch compute environments
      for genomics workflows
    Value: !Ref EC2LaunchTemplate
