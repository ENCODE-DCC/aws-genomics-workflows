AWSTemplateFormatVersion: 2010-09-09
Description: >
    Deploys a the Amazon Identity and Access Management (IAM) Roles and AWS Batch environment that are used in the AWS re:Invent workshop LFS309 "Highthroughput Genomics on AWS". Outputs include the IAM Execution Role for AWS Lambda functions, and the names of the high and low priority JobQueues. You will be billed for the AWS resources used if you create a stack from this template.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "AWS Batch Environment Config"
        Parameters:
        - SubnetIds
        - SecurityGroupIds
        - BidPercentage
        - ImageId
        - Ec2KeyPair
        - MinvCpus
        - MaxvCpus
        - RetryNumber
      - Label:
          default: "Cromwell Root Bucket"
        Parameters:
        - CromwellRootBucketName

Parameters:
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnets you want your batch compute environment to launch in. Recommend private subnets
  SecurityGroupIds:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: Security groups your instances in your batch compute environment should use
  BidPercentage:
    Type: Number
    Description: Maximum spot percentage of on-demand. Should be an integer - default is 50
    MaxValue: 100
    MinValue: 5
    Default: 100
  ImageId:
    Type: AWS::EC2::Image::Id
    Description: AMI you want your AWS Batch Compute Environment to use
  Ec2KeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of the EC2 Key Pair for connecting to EC2 instances launched in your compute environment
  MinvCpus:
    Type: Number
    Description: Minimum number of CPUs in the compute environment. Default 0.
    Default: 4
    MinValue: 0
  MaxvCpus:
    Type: Number
    Description: Maximum number of CPUs in the compute environment. Should be >= than MinCpus
    Default: 64
    MinValue: 0
  RetryNumber:
    Type: Number
    Description: Number of retries for each AWS Batch job. Integer required.
    MaxValue: 3
    MinValue: 0
    Default: 1
  CromwellRootBucketName:
    Type: String
    Description: The name of the Cromwell root bucket, which will store the results of Cromwell Tasks.
Resources:
  BatchServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: batch.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole
  CromwellRootBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref CromwellRootBucketName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
             SSEAlgorithm: AES256
  CromwellS3AccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Path: "/"
      Roles:
        Ref: CromwellTaskRole
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
      Policies:
        PolicyName: "CromwellS3Access"
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Deny
              Resource: !Join ["", ["arn:aws:s3:::", !Ref CromwellRootBucketName]]
              Action:
                - "s3:Delete*"
                - "s3:PutBucket*"
            - Effect: Allow
              Resource: !Join ["", ["arn:aws:s3:::", !Ref CromwellRootBucketName]]
              Action:
                - "s3:ListBucket*"
            - Effect: Allow
              Resource: !Join ["", ["arn:aws:s3:::", !Ref CromwellRootBucketName, "/*"]]
              Action:
                - "s3:*"
  CromwellTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "ecs-tasks.amazonaws.com"
            Action:
              - "sts:AssumeRole"
  EcsInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        PolicyName: !Sub Cromwell-Autoscale-EBS-${AWS::Region}
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            Effect: Allow
            Action:
              - "ec2:createVolume"
              - "ec2:attacheVolume"
              - "ecs:describeVolumes"
              - "ec3:modifyInstanceAttribute"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
  EcsInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EcsInstanceRole
  SpotFleetRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "spotfleet.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetRole"
  CromwellSpotCE:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      ServiceRole:
        Ref: BatchServiceRole
      Type: MANAGED
      State: ENABLED
      ComputeResources:
        BidPercentage: !Ref BidPercentage
        Ec2KeyPair: !Ref Ec2KeyPair
        ImageId: !Ref ImageId
        InstanceRole:
          Ref: EcsInstanceProfile
        InstanceTypes:
          - optimal
        MinvCpus: !Ref MinvCpus
        MaxvCpus: !Ref MaxvCpus
        SecurityGroupIds: !Ref SecurityGroupIds
        SpotIamFleetRole:
          Ref: SpotFleetRole
        Subnets: !Ref SubnetIds
        Type: SPOT
        Tags:
          - Name: CromwellSpot
  CromwellOnDemandCE:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      ServiceRole:
        Ref: BatchServiceRole
      Type: MANAGED
      State: ENABLED
      ComputeResources:
        BidPercentage: !Ref BidPercentage
        Ec2KeyPair: !Ref Ec2KeyPair
        ImageId: !Ref ImageId
        InstanceRole: !GetAtt EcsInstanceRole.Arn
        InstanceTypes:
          - optimal
        MinvCpus: !Ref MinvCpus
        MaxvCpus: !Ref MaxvCpus
        SecurityGroupIds: !Ref SecurityGroupIds
        SpotIamFleetRole:
          Ref: SpotFleetRole
        Subnets: !Ref SubnetIds
        Type: EC2
        Tags:
          - Name: CromwellOnDemand
  CromwelllHighPriorityQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      Priority: 1000
      State: ENABLED
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref CromwellOnDemandCE
        - Order: 2
          ComputeEnvironment: !Ref CromwellSpotCE

  CromwellDefaultQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      Priority: 1
      State: ENABLED
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref CromwellSpotCE
        - Order: 2
          ComputeEnvironment: !Ref CromwellOnDemandCE

Outputs:
  CromwellRootBucketName:
    Value: !Ref CromwellRootBucketName
  CromwellDefaultQueue:
    Value: !Ref CromwellDefaultQueue
  CromwelllHighPriorityQueue:
    Value: !Ref CromwelllHighPriorityQueue
